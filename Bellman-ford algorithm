def bellman_ford(graph, vertices, edges, source):
    distance = [float("Inf")] * vertices
    distance[source] = 0

    for _ in range(vertices - 1):
        for u, v, w in edges:
            if distance[u] != float("Inf") and distance[u] + w < distance[v]:
                distance[v] = distance[u] + w

    for u, v, w in edges:
        if distance[u] != float("Inf") and distance[u] + w < distance[v]:
            print("Graph contains negative weight cycle")
            return

    print("Vertex Distance from Source")
    for i in range(vertices):
        print("{0}\t\t{1}".format(i, distance[i]))

graph = [(0, 1, -1), (0, 2, 4), (1, 2, 3), (1, 3, 2), (1, 4, 2),
         (3, 2, 5), (3, 1, 1), (4, 3, -3)]

vertices = 5
edges
